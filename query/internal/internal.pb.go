// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: internal/internal.proto

package query

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Point struct {
	Name                 *string        `protobuf:"bytes,1,req,name=Name" json:"Name,omitempty"`
	Tags                 *string        `protobuf:"bytes,2,req,name=Tags" json:"Tags,omitempty"`
	Time                 *int64         `protobuf:"varint,3,req,name=Time" json:"Time,omitempty"`
	Nil                  *bool          `protobuf:"varint,4,req,name=Nil" json:"Nil,omitempty"`
	Aux                  []*Aux         `protobuf:"bytes,5,rep,name=Aux" json:"Aux,omitempty"`
	Aggregated           *uint32        `protobuf:"varint,6,opt,name=Aggregated" json:"Aggregated,omitempty"`
	FloatValue           *float64       `protobuf:"fixed64,7,opt,name=FloatValue" json:"FloatValue,omitempty"`
	IntegerValue         *int64         `protobuf:"varint,8,opt,name=IntegerValue" json:"IntegerValue,omitempty"`
	StringValue          *string        `protobuf:"bytes,9,opt,name=StringValue" json:"StringValue,omitempty"`
	BooleanValue         *bool          `protobuf:"varint,10,opt,name=BooleanValue" json:"BooleanValue,omitempty"`
	UnsignedValue        *uint64        `protobuf:"varint,12,opt,name=UnsignedValue" json:"UnsignedValue,omitempty"`
	Stats                *IteratorStats `protobuf:"bytes,11,opt,name=Stats" json:"Stats,omitempty"`
	Trace                []byte         `protobuf:"bytes,13,opt,name=Trace" json:"Trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{0}
}
func (m *Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Point.Unmarshal(m, b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Point.Marshal(b, m, deterministic)
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return xxx_messageInfo_Point.Size(m)
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Point) GetTags() string {
	if m != nil && m.Tags != nil {
		return *m.Tags
	}
	return ""
}

func (m *Point) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Point) GetNil() bool {
	if m != nil && m.Nil != nil {
		return *m.Nil
	}
	return false
}

func (m *Point) GetAux() []*Aux {
	if m != nil {
		return m.Aux
	}
	return nil
}

func (m *Point) GetAggregated() uint32 {
	if m != nil && m.Aggregated != nil {
		return *m.Aggregated
	}
	return 0
}

func (m *Point) GetFloatValue() float64 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *Point) GetIntegerValue() int64 {
	if m != nil && m.IntegerValue != nil {
		return *m.IntegerValue
	}
	return 0
}

func (m *Point) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *Point) GetBooleanValue() bool {
	if m != nil && m.BooleanValue != nil {
		return *m.BooleanValue
	}
	return false
}

func (m *Point) GetUnsignedValue() uint64 {
	if m != nil && m.UnsignedValue != nil {
		return *m.UnsignedValue
	}
	return 0
}

func (m *Point) GetStats() *IteratorStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Point) GetTrace() []byte {
	if m != nil {
		return m.Trace
	}
	return nil
}

type Aux struct {
	DataType             *int32   `protobuf:"varint,1,req,name=DataType" json:"DataType,omitempty"`
	FloatValue           *float64 `protobuf:"fixed64,2,opt,name=FloatValue" json:"FloatValue,omitempty"`
	IntegerValue         *int64   `protobuf:"varint,3,opt,name=IntegerValue" json:"IntegerValue,omitempty"`
	StringValue          *string  `protobuf:"bytes,4,opt,name=StringValue" json:"StringValue,omitempty"`
	BooleanValue         *bool    `protobuf:"varint,5,opt,name=BooleanValue" json:"BooleanValue,omitempty"`
	UnsignedValue        *uint64  `protobuf:"varint,6,opt,name=UnsignedValue" json:"UnsignedValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Aux) Reset()         { *m = Aux{} }
func (m *Aux) String() string { return proto.CompactTextString(m) }
func (*Aux) ProtoMessage()    {}
func (*Aux) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{1}
}
func (m *Aux) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Aux.Unmarshal(m, b)
}
func (m *Aux) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Aux.Marshal(b, m, deterministic)
}
func (m *Aux) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Aux.Merge(m, src)
}
func (m *Aux) XXX_Size() int {
	return xxx_messageInfo_Aux.Size(m)
}
func (m *Aux) XXX_DiscardUnknown() {
	xxx_messageInfo_Aux.DiscardUnknown(m)
}

var xxx_messageInfo_Aux proto.InternalMessageInfo

func (m *Aux) GetDataType() int32 {
	if m != nil && m.DataType != nil {
		return *m.DataType
	}
	return 0
}

func (m *Aux) GetFloatValue() float64 {
	if m != nil && m.FloatValue != nil {
		return *m.FloatValue
	}
	return 0
}

func (m *Aux) GetIntegerValue() int64 {
	if m != nil && m.IntegerValue != nil {
		return *m.IntegerValue
	}
	return 0
}

func (m *Aux) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *Aux) GetBooleanValue() bool {
	if m != nil && m.BooleanValue != nil {
		return *m.BooleanValue
	}
	return false
}

func (m *Aux) GetUnsignedValue() uint64 {
	if m != nil && m.UnsignedValue != nil {
		return *m.UnsignedValue
	}
	return 0
}

type IteratorOptions struct {
	Expr                 *string   `protobuf:"bytes,1,opt,name=Expr" json:"Expr,omitempty"`
	Aux                  []string  `protobuf:"bytes,2,rep,name=Aux" json:"Aux,omitempty"`
	Fields               []*VarRef `protobuf:"bytes,17,rep,name=Fields" json:"Fields,omitempty"`
	Sources              []*Metric `protobuf:"bytes,3,rep,name=Sources" json:"Sources,omitempty"`
	Interval             *Interval `protobuf:"bytes,4,opt,name=Interval" json:"Interval,omitempty"`
	Dimensions           []string  `protobuf:"bytes,5,rep,name=Dimensions" json:"Dimensions,omitempty"`
	GroupBy              []string  `protobuf:"bytes,19,rep,name=GroupBy" json:"GroupBy,omitempty"`
	Fill                 *int32    `protobuf:"varint,6,opt,name=Fill" json:"Fill,omitempty"`
	FillValue            *float64  `protobuf:"fixed64,7,opt,name=FillValue" json:"FillValue,omitempty"`
	Condition            *string   `protobuf:"bytes,8,opt,name=Condition" json:"Condition,omitempty"`
	StartTime            *int64    `protobuf:"varint,9,opt,name=StartTime" json:"StartTime,omitempty"`
	EndTime              *int64    `protobuf:"varint,10,opt,name=EndTime" json:"EndTime,omitempty"`
	Location             *string   `protobuf:"bytes,21,opt,name=Location" json:"Location,omitempty"`
	Ascending            *bool     `protobuf:"varint,11,opt,name=Ascending" json:"Ascending,omitempty"`
	Limit                *int64    `protobuf:"varint,12,opt,name=Limit" json:"Limit,omitempty"`
	Offset               *int64    `protobuf:"varint,13,opt,name=Offset" json:"Offset,omitempty"`
	SLimit               *int64    `protobuf:"varint,14,opt,name=SLimit" json:"SLimit,omitempty"`
	SOffset              *int64    `protobuf:"varint,15,opt,name=SOffset" json:"SOffset,omitempty"`
	StripName            *bool     `protobuf:"varint,22,opt,name=StripName" json:"StripName,omitempty"`
	Dedupe               *bool     `protobuf:"varint,16,opt,name=Dedupe" json:"Dedupe,omitempty"`
	MaxSeriesN           *int64    `protobuf:"varint,18,opt,name=MaxSeriesN" json:"MaxSeriesN,omitempty"`
	Ordered              *bool     `protobuf:"varint,20,opt,name=Ordered" json:"Ordered,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IteratorOptions) Reset()         { *m = IteratorOptions{} }
func (m *IteratorOptions) String() string { return proto.CompactTextString(m) }
func (*IteratorOptions) ProtoMessage()    {}
func (*IteratorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{2}
}
func (m *IteratorOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IteratorOptions.Unmarshal(m, b)
}
func (m *IteratorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IteratorOptions.Marshal(b, m, deterministic)
}
func (m *IteratorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IteratorOptions.Merge(m, src)
}
func (m *IteratorOptions) XXX_Size() int {
	return xxx_messageInfo_IteratorOptions.Size(m)
}
func (m *IteratorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_IteratorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_IteratorOptions proto.InternalMessageInfo

func (m *IteratorOptions) GetExpr() string {
	if m != nil && m.Expr != nil {
		return *m.Expr
	}
	return ""
}

func (m *IteratorOptions) GetAux() []string {
	if m != nil {
		return m.Aux
	}
	return nil
}

func (m *IteratorOptions) GetFields() []*VarRef {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *IteratorOptions) GetSources() []*Metric {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *IteratorOptions) GetInterval() *Interval {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *IteratorOptions) GetDimensions() []string {
	if m != nil {
		return m.Dimensions
	}
	return nil
}

func (m *IteratorOptions) GetGroupBy() []string {
	if m != nil {
		return m.GroupBy
	}
	return nil
}

func (m *IteratorOptions) GetFill() int32 {
	if m != nil && m.Fill != nil {
		return *m.Fill
	}
	return 0
}

func (m *IteratorOptions) GetFillValue() float64 {
	if m != nil && m.FillValue != nil {
		return *m.FillValue
	}
	return 0
}

func (m *IteratorOptions) GetCondition() string {
	if m != nil && m.Condition != nil {
		return *m.Condition
	}
	return ""
}

func (m *IteratorOptions) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *IteratorOptions) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *IteratorOptions) GetLocation() string {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return ""
}

func (m *IteratorOptions) GetAscending() bool {
	if m != nil && m.Ascending != nil {
		return *m.Ascending
	}
	return false
}

func (m *IteratorOptions) GetLimit() int64 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *IteratorOptions) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *IteratorOptions) GetSLimit() int64 {
	if m != nil && m.SLimit != nil {
		return *m.SLimit
	}
	return 0
}

func (m *IteratorOptions) GetSOffset() int64 {
	if m != nil && m.SOffset != nil {
		return *m.SOffset
	}
	return 0
}

func (m *IteratorOptions) GetStripName() bool {
	if m != nil && m.StripName != nil {
		return *m.StripName
	}
	return false
}

func (m *IteratorOptions) GetDedupe() bool {
	if m != nil && m.Dedupe != nil {
		return *m.Dedupe
	}
	return false
}

func (m *IteratorOptions) GetMaxSeriesN() int64 {
	if m != nil && m.MaxSeriesN != nil {
		return *m.MaxSeriesN
	}
	return 0
}

func (m *IteratorOptions) GetOrdered() bool {
	if m != nil && m.Ordered != nil {
		return *m.Ordered
	}
	return false
}

type Metrics struct {
	Items                []*Metric `protobuf:"bytes,1,rep,name=Items" json:"Items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{3}
}
func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetItems() []*Metric {
	if m != nil {
		return m.Items
	}
	return nil
}

type Metric struct {
	Database             *string  `protobuf:"bytes,1,opt,name=Database" json:"Database,omitempty"`
	TimeToLive           *string  `protobuf:"bytes,2,opt,name=TimeToLive" json:"TimeToLive,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
	Regex                *string  `protobuf:"bytes,4,opt,name=Regex" json:"Regex,omitempty"`
	IsTarget             *bool    `protobuf:"varint,5,opt,name=IsTarget" json:"IsTarget,omitempty"`
	SystemIterator       *string  `protobuf:"bytes,6,opt,name=SystemIterator" json:"SystemIterator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{4}
}
func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetDatabase() string {
	if m != nil && m.Database != nil {
		return *m.Database
	}
	return ""
}

func (m *Metric) GetTimeToLive() string {
	if m != nil && m.TimeToLive != nil {
		return *m.TimeToLive
	}
	return ""
}

func (m *Metric) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Metric) GetRegex() string {
	if m != nil && m.Regex != nil {
		return *m.Regex
	}
	return ""
}

func (m *Metric) GetIsTarget() bool {
	if m != nil && m.IsTarget != nil {
		return *m.IsTarget
	}
	return false
}

func (m *Metric) GetSystemIterator() string {
	if m != nil && m.SystemIterator != nil {
		return *m.SystemIterator
	}
	return ""
}

type Interval struct {
	Duration             *int64   `protobuf:"varint,1,opt,name=Duration" json:"Duration,omitempty"`
	Offset               *int64   `protobuf:"varint,2,opt,name=Offset" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interval) Reset()         { *m = Interval{} }
func (m *Interval) String() string { return proto.CompactTextString(m) }
func (*Interval) ProtoMessage()    {}
func (*Interval) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{5}
}
func (m *Interval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interval.Unmarshal(m, b)
}
func (m *Interval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interval.Marshal(b, m, deterministic)
}
func (m *Interval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interval.Merge(m, src)
}
func (m *Interval) XXX_Size() int {
	return xxx_messageInfo_Interval.Size(m)
}
func (m *Interval) XXX_DiscardUnknown() {
	xxx_messageInfo_Interval.DiscardUnknown(m)
}

var xxx_messageInfo_Interval proto.InternalMessageInfo

func (m *Interval) GetDuration() int64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *Interval) GetOffset() int64 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

type IteratorStats struct {
	SeriesN              *int64   `protobuf:"varint,1,opt,name=SeriesN" json:"SeriesN,omitempty"`
	PointN               *int64   `protobuf:"varint,2,opt,name=PointN" json:"PointN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IteratorStats) Reset()         { *m = IteratorStats{} }
func (m *IteratorStats) String() string { return proto.CompactTextString(m) }
func (*IteratorStats) ProtoMessage()    {}
func (*IteratorStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{6}
}
func (m *IteratorStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IteratorStats.Unmarshal(m, b)
}
func (m *IteratorStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IteratorStats.Marshal(b, m, deterministic)
}
func (m *IteratorStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IteratorStats.Merge(m, src)
}
func (m *IteratorStats) XXX_Size() int {
	return xxx_messageInfo_IteratorStats.Size(m)
}
func (m *IteratorStats) XXX_DiscardUnknown() {
	xxx_messageInfo_IteratorStats.DiscardUnknown(m)
}

var xxx_messageInfo_IteratorStats proto.InternalMessageInfo

func (m *IteratorStats) GetSeriesN() int64 {
	if m != nil && m.SeriesN != nil {
		return *m.SeriesN
	}
	return 0
}

func (m *IteratorStats) GetPointN() int64 {
	if m != nil && m.PointN != nil {
		return *m.PointN
	}
	return 0
}

type VarRef struct {
	Val                  *string  `protobuf:"bytes,1,req,name=Val" json:"Val,omitempty"`
	Type                 *int32   `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VarRef) Reset()         { *m = VarRef{} }
func (m *VarRef) String() string { return proto.CompactTextString(m) }
func (*VarRef) ProtoMessage()    {}
func (*VarRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_41ca0a4a9dd77d9e, []int{7}
}
func (m *VarRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VarRef.Unmarshal(m, b)
}
func (m *VarRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VarRef.Marshal(b, m, deterministic)
}
func (m *VarRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VarRef.Merge(m, src)
}
func (m *VarRef) XXX_Size() int {
	return xxx_messageInfo_VarRef.Size(m)
}
func (m *VarRef) XXX_DiscardUnknown() {
	xxx_messageInfo_VarRef.DiscardUnknown(m)
}

var xxx_messageInfo_VarRef proto.InternalMessageInfo

func (m *VarRef) GetVal() string {
	if m != nil && m.Val != nil {
		return *m.Val
	}
	return ""
}

func (m *VarRef) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func init() {
	proto.RegisterType((*Point)(nil), "query.Point")
	proto.RegisterType((*Aux)(nil), "query.Aux")
	proto.RegisterType((*IteratorOptions)(nil), "query.IteratorOptions")
	proto.RegisterType((*Metrics)(nil), "query.Metrics")
	proto.RegisterType((*Metric)(nil), "query.Metric")
	proto.RegisterType((*Interval)(nil), "query.Interval")
	proto.RegisterType((*IteratorStats)(nil), "query.IteratorStats")
	proto.RegisterType((*VarRef)(nil), "query.VarRef")
}

func init() { proto.RegisterFile("internal/internal.proto", fileDescriptor_41ca0a4a9dd77d9e) }

var fileDescriptor_41ca0a4a9dd77d9e = []byte{
	// 785 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdb, 0x6e, 0xe3, 0x36,
	0x10, 0x05, 0xad, 0xc8, 0xb1, 0xe8, 0x78, 0xb3, 0x65, 0xd3, 0x94, 0x28, 0x16, 0x85, 0xa0, 0xde,
	0x84, 0x16, 0x70, 0x81, 0x7c, 0x40, 0x01, 0x6f, 0xb3, 0x29, 0x02, 0x64, 0x93, 0x82, 0x76, 0xf3,
	0xce, 0x5a, 0x13, 0x81, 0x80, 0x2c, 0xb9, 0x14, 0xb5, 0xb0, 0xdf, 0xfa, 0xd2, 0x1f, 0xea, 0x9f,
	0xf4, 0x8f, 0x8a, 0x19, 0x4a, 0xb2, 0xbc, 0x08, 0x90, 0x7d, 0xf2, 0x9c, 0x33, 0x63, 0x5e, 0xce,
	0x9c, 0xa1, 0xf8, 0x97, 0xa6, 0x74, 0x60, 0x4b, 0x5d, 0xfc, 0xdc, 0x05, 0xf3, 0xad, 0xad, 0x5c,
	0x25, 0xc2, 0xbf, 0x1a, 0xb0, 0xfb, 0xe4, 0x9f, 0x80, 0x87, 0xbf, 0x57, 0xa6, 0x74, 0x42, 0xf0,
	0x93, 0x7b, 0xbd, 0x01, 0xc9, 0xe2, 0x51, 0x1a, 0x29, 0x8a, 0x91, 0x5b, 0xe9, 0xbc, 0x96, 0x23,
	0xcf, 0x61, 0x4c, 0x9c, 0xd9, 0x80, 0x0c, 0xe2, 0x51, 0x1a, 0x28, 0x8a, 0xc5, 0x6b, 0x1e, 0xdc,
	0x9b, 0x42, 0x9e, 0xc4, 0xa3, 0x74, 0xa2, 0x30, 0x14, 0x6f, 0x78, 0xb0, 0x68, 0x76, 0x32, 0x8c,
	0x83, 0x74, 0x7a, 0xc5, 0xe7, 0xb4, 0xd9, 0x7c, 0xd1, 0xec, 0x14, 0xd2, 0xe2, 0x6b, 0xce, 0x17,
	0x79, 0x6e, 0x21, 0xd7, 0x0e, 0x32, 0x39, 0x8e, 0x59, 0x3a, 0x53, 0x03, 0x06, 0xf3, 0x37, 0x45,
	0xa5, 0xdd, 0xa3, 0x2e, 0x1a, 0x90, 0xa7, 0x31, 0x4b, 0x99, 0x1a, 0x30, 0x22, 0xe1, 0x67, 0xb7,
	0xa5, 0x83, 0x1c, 0xac, 0xaf, 0x98, 0xc4, 0x2c, 0x0d, 0xd4, 0x11, 0x27, 0x62, 0x3e, 0x5d, 0x3a,
	0x6b, 0xca, 0xdc, 0x97, 0x44, 0x31, 0x4b, 0x23, 0x35, 0xa4, 0x70, 0x95, 0xb7, 0x55, 0x55, 0x80,
	0x2e, 0x7d, 0x09, 0x8f, 0x59, 0x3a, 0x51, 0x47, 0x9c, 0xf8, 0x96, 0xcf, 0xfe, 0x28, 0x6b, 0x93,
	0x97, 0x90, 0xf9, 0xa2, 0xb3, 0x98, 0xa5, 0x27, 0xea, 0x98, 0x14, 0x3f, 0xf2, 0x70, 0xe9, 0xb4,
	0xab, 0xe5, 0x34, 0x66, 0xe9, 0xf4, 0xea, 0xa2, 0xbd, 0xef, 0xad, 0x03, 0xab, 0x5d, 0x65, 0x29,
	0xa7, 0x7c, 0x89, 0xb8, 0xe0, 0xe1, 0xca, 0xea, 0x35, 0xc8, 0x59, 0xcc, 0xd2, 0x33, 0xe5, 0x41,
	0xf2, 0x1f, 0x23, 0xc1, 0xc4, 0x57, 0x7c, 0x72, 0xad, 0x9d, 0x5e, 0xed, 0xb7, 0xbe, 0x13, 0xa1,
	0xea, 0xf1, 0x47, 0xaa, 0x8c, 0x5e, 0x54, 0x25, 0x78, 0x59, 0x95, 0x93, 0x97, 0x55, 0x09, 0x3f,
	0x45, 0x95, 0xf1, 0x33, 0xaa, 0x24, 0x7f, 0x87, 0xfc, 0xbc, 0x93, 0xe0, 0x61, 0xeb, 0x4c, 0x55,
	0x92, 0x7b, 0xde, 0xed, 0xb6, 0x56, 0x32, 0xda, 0x98, 0x62, 0x74, 0x0f, 0x7a, 0x65, 0x14, 0x07,
	0x69, 0xe4, 0xfd, 0xf1, 0x1d, 0x1f, 0xdf, 0x18, 0x28, 0xb2, 0x5a, 0x7e, 0x46, 0x06, 0x9a, 0xb5,
	0x82, 0x3e, 0x6a, 0xab, 0xe0, 0x49, 0xb5, 0x49, 0xf1, 0x03, 0x3f, 0x5d, 0x56, 0x8d, 0x5d, 0x43,
	0x2d, 0x83, 0xa3, 0xba, 0xf7, 0xe0, 0xac, 0x59, 0xab, 0x2e, 0x2b, 0x7e, 0xe2, 0x13, 0x54, 0xc1,
	0x7e, 0xd0, 0x05, 0x5d, 0x79, 0x7a, 0x75, 0xde, 0xb5, 0xa8, 0xa5, 0x55, 0x5f, 0x80, 0x32, 0x5f,
	0x9b, 0x0d, 0x94, 0x35, 0x1e, 0x98, 0x1c, 0x1c, 0xa9, 0x01, 0x23, 0x24, 0x3f, 0xfd, 0xcd, 0x56,
	0xcd, 0xf6, 0xed, 0x5e, 0x7e, 0x4e, 0xc9, 0x0e, 0xe2, 0xe5, 0x6e, 0x4c, 0x51, 0x90, 0x1a, 0xa1,
	0xa2, 0x58, 0xbc, 0xe1, 0x11, 0xfe, 0x0e, 0x9d, 0x7c, 0x20, 0x30, 0xfb, 0x6b, 0x55, 0x66, 0x06,
	0xc5, 0x21, 0x17, 0x47, 0xea, 0x40, 0x60, 0x76, 0xe9, 0xb4, 0x75, 0x34, 0x6f, 0x11, 0x75, 0xf3,
	0x40, 0xe0, 0x39, 0xde, 0x95, 0x19, 0xe5, 0x38, 0xe5, 0x3a, 0x88, 0x26, 0xba, 0xab, 0xd6, 0x9a,
	0x16, 0xfd, 0x82, 0x16, 0xed, 0x31, 0xae, 0xb9, 0xa8, 0xd7, 0x50, 0x66, 0xa6, 0xcc, 0xc9, 0xae,
	0x13, 0x75, 0x20, 0xd0, 0x9c, 0x77, 0x66, 0x63, 0x1c, 0xd9, 0x3c, 0x50, 0x1e, 0x88, 0x4b, 0x3e,
	0x7e, 0x78, 0x7a, 0xaa, 0xc1, 0x91, 0x67, 0x03, 0xd5, 0x22, 0xe4, 0x97, 0xbe, 0xfc, 0x95, 0xe7,
	0x3d, 0xc2, 0x93, 0x2d, 0xdb, 0x3f, 0x9c, 0xfb, 0x93, 0xb5, 0xd0, 0xdf, 0xc8, 0x9a, 0x2d, 0xbd,
	0x34, 0x97, 0x7e, 0xf7, 0x9e, 0xc0, 0xf5, 0xae, 0x21, 0x6b, 0xb6, 0x20, 0x5f, 0x53, 0xaa, 0x45,
	0xd8, 0x91, 0xf7, 0x7a, 0xb7, 0x04, 0x6b, 0xa0, 0xbe, 0x97, 0x82, 0x96, 0x1c, 0x30, 0xb8, 0xdf,
	0x83, 0xcd, 0xc0, 0x42, 0x26, 0x2f, 0xe8, 0x8f, 0x1d, 0x4c, 0xe6, 0xfc, 0xd4, 0x7b, 0xa1, 0x16,
	0xdf, 0xf0, 0xf0, 0xd6, 0xc1, 0xa6, 0x96, 0xec, 0x39, 0xab, 0xf8, 0x5c, 0xf2, 0x2f, 0xe3, 0x63,
	0xcf, 0x74, 0x93, 0xf8, 0xa7, 0xae, 0xa1, 0x75, 0x6b, 0x8f, 0xf1, 0x40, 0x28, 0xf4, 0xaa, 0xba,
	0x33, 0x1f, 0xfc, 0x24, 0x46, 0x6a, 0xc0, 0xf4, 0x6f, 0x69, 0xe0, 0x5d, 0x4e, 0x97, 0xbb, 0xe0,
	0xa1, 0x82, 0x1c, 0x76, 0xed, 0xcc, 0x79, 0x80, 0xbb, 0xdc, 0xd6, 0x2b, 0x6d, 0x73, 0x70, 0xed,
	0xa4, 0xf5, 0x58, 0x7c, 0xcf, 0x5f, 0x2d, 0xf7, 0xb5, 0x83, 0x4d, 0x37, 0x44, 0x64, 0xac, 0x48,
	0x7d, 0xc4, 0x26, 0xbf, 0x1c, 0xdc, 0x4d, 0xa7, 0x6e, 0xac, 0x6f, 0x3d, 0x23, 0xa1, 0x7a, 0x3c,
	0x68, 0xe3, 0x68, 0xd8, 0xc6, 0x64, 0xc1, 0x67, 0x47, 0x2f, 0x15, 0xf5, 0xaf, 0x15, 0x9b, 0xb5,
	0xfd, 0x6b, 0x95, 0xbe, 0xe4, 0x63, 0xfa, 0x5a, 0xdc, 0x77, 0x4b, 0x78, 0x94, 0xcc, 0xf9, 0xd8,
	0xcf, 0x26, 0x0e, 0xf3, 0xa3, 0x2e, 0xda, 0xaf, 0x08, 0x86, 0xf4, 0xc1, 0xc0, 0xe7, 0x6c, 0xe4,
	0xa7, 0x02, 0xe3, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x02, 0x26, 0x0d, 0x76, 0x97, 0x06, 0x00,
	0x00,
}
